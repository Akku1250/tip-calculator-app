{"version":3,"sources":["components/section/section_component.jsx","components/custom-button/custom-button_component.jsx","components/form-input/form-input_component.jsx","components/selected-tip/selected-tip_component.jsx","components/receipt/receipt_component.jsx","images/icon-dollar.svg","images/icon-person.svg","components/tip_calculator/tip-calculator_component.jsx","App.js","index.js"],"names":["Section","addClass","children","className","CustomButton","otherProps","FormInput","handleChange","label","imageURL","alt","src","onChange","SeletedTip","tips","handleTipSelection","handleCustomTip","customTip","map","tip","type","name","value","onClick","active","id","placeholder","Receipt","title","subText","amount","TipCalculator","props","handleInputChange","target","setState","updateReceipt","parseFloat","state","bill","total","tipAmount","selectedTip","parseInt","numberOfPpl","isNaN","toFixed","changeTipSelection","forEach","updateSelectedTip","handleBill","e","Number","isInteger","handleNumberOfPpl","handleReset","baseState","this","dollar","person","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee516e5b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './section_style.scss';\r\n\r\nconst Section = ({addClass, children}) => (\r\n    <div className={`section ${addClass ? addClass : '' }`}>\r\n      {children}\r\n    </div>\r\n)\r\n\r\nexport default Section;","import React from 'react';\r\nimport './custom-button_style.scss';\r\n\r\nconst CustomButton = ({children, addClass, ...otherProps}) => (\r\n    <button className={`custom-button ${addClass ? addClass : '' }`} {...otherProps}>\r\n       {children}\r\n    </button>\r\n)\r\n\r\nexport default CustomButton;","import React from 'react';\r\n\r\nimport './form-input_style.scss';\r\n\r\nconst FormInput = ({handleChange, label, imageURL,alt, addClass,...otherProps}) => (\r\n    <div className=\"input-group\">\r\n        {\r\n            label ?\r\n                (<div className=\"label-container\">\r\n                    <label className={`form-input-label`}>\r\n                        {label}\r\n                    </label>\r\n                </div>)\r\n                :null\r\n        }\r\n        <div className=\"input-container\">\r\n            {\r\n                imageURL? \r\n                (<img className=\"form-input-icon\" src={imageURL} alt={alt}/>)\r\n                : null\r\n            }\r\n            <input \r\n                className={`form-input ${imageURL? 'add-spacing': ''} ${addClass? addClass : ''}`} \r\n                onChange={handleChange} \r\n                {...otherProps}/>   \r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default FormInput;","import React from \"react\";\r\nimport CustomButton from \"../custom-button/custom-button_component\";\r\nimport FormInput from \"../form-input/form-input_component\";\r\nimport './selected-tip_style.scss';\r\n\r\nconst SeletedTip = ({label, tips, handleTipSelection, handleCustomTip, customTip}) => (\r\n    <div className=\"select-tip\">\r\n        <div className=\"label-container\">\r\n            <label className={`form-input-label`}>\r\n                {label}\r\n            </label>\r\n        </div>\r\n        <div className=\"d-grid\">\r\n            {tips.map((tip) => (\r\n                tip.type === 'button' \r\n                    ? (<CustomButton key={tip.id} \r\n                            name={tip.name} \r\n                            value={tip.value}\r\n                            onClick={handleTipSelection} \r\n                            addClass={`${tip.active ? 'button-active' : '' } custom-button`}\r\n                        >\r\n                            {`${tip.value}%`}\r\n                        </CustomButton>)\r\n                    : (<FormInput key={tip.id}\r\n                            name={tip.name}\r\n                            value={customTip} \r\n                            type=\"number\" \r\n                            placeholder={tip.placeholder}\r\n                            handleChange = {handleCustomTip}\r\n                            addClass={`${tip.active ? 'input-active' : '' } custom-input`}\r\n                       />)\r\n            ))}\r\n        </div>\r\n    </div>\r\n)\r\n\r\n\r\nexport default SeletedTip;","import React from \"react\";\r\nimport './receipt_style.scss';\r\n\r\n\r\nconst Receipt = ({title,subText,amount}) => (\r\n    <div className=\"receipt\">\r\n        <div className=\"receipt-text\">\r\n            <p className=\"receipt-title\">\r\n                {title}\r\n            </p>\r\n            <span>{subText}</span>\r\n        </div>\r\n        <div className=\"receipt-amount\">\r\n            <p>${amount}</p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\n\r\nexport default Receipt;","export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import React from \"react\";\r\nimport Section from \"../section/section_component\";\r\nimport SeletedTip from \"../selected-tip/selected-tip_component\";\r\nimport Receipt from \"../receipt/receipt_component\";\r\nimport CustomButton from \"../custom-button/custom-button_component\";\r\nimport FormInput from \"../form-input/form-input_component\";\r\nimport dollar from '../../images/icon-dollar.svg';\r\nimport person from '../../images/icon-person.svg';\r\n\r\nimport './tip-calculator_style.scss';\r\n\r\nclass TipCalculator extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.baseState = {\r\n            bill: '',\r\n            numberOfPpl: 1,\r\n            tips: [\r\n                    {id: 1, type:\"button\", name:\"5\", value:5, active: false},\r\n                    {id: 2, type:\"button\", name:\"10\", value:10, active: false},\r\n                    {id: 3, type:\"button\", name:\"15\", value:15, active: false},\r\n                    {id: 4, type:\"button\", name:\"25\", value:25, active: false},\r\n                    {id: 5, type:\"button\", name:\"50\", value:50, active: false},\r\n                    {id: 6, type:\"input\", name:\"customTip\", placeholder: \"Custom\", active: false},\r\n                  ],\r\n            selectedTip: 0,\r\n            customTip: '',\r\n            tipAmount: (0.00).toFixed(2),\r\n            total: (0.00).toFixed(2)\r\n        }\r\n\r\n        this.state = this.baseState;\r\n    }\r\n\r\n    handleInputChange = (target) => {\r\n        const {value, name} = target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    updateReceipt = () =>{\r\n        if(parseFloat(this.state.bill) !== 0){\r\n            this.setState((state) => {\r\n               let bill = parseFloat(state.bill);\r\n               let selectedTip = parseFloat(state.selectedTip);\r\n               let numberOfPpl = parseInt(state.numberOfPpl);\r\n               let total = 0;\r\n               let tipAmount = 0;\r\n\r\n               tipAmount = bill * (selectedTip / 100);\r\n               total = (bill + tipAmount) / numberOfPpl;\r\n\r\n               if (!isNaN(tipAmount) && !isNaN(total)){\r\n                   return {tipAmount: tipAmount.toFixed(2), total: total.toFixed(2) };\r\n               }\r\n            });\r\n        }\r\n    }\r\n\r\n    changeTipSelection = (target) =>{\r\n\r\n        this.setState((state) => {\r\n            let tips = state.tips ;\r\n\r\n            tips.forEach(tip => {\r\n                if(tip.active === true && tip.name !== target.name){\r\n                    tip.active = false;\r\n\r\n                }\r\n                if(tip.name === target.name && tip.active !== true){\r\n                    tip.active = true;\r\n                }\r\n            })\r\n            return {tips: tips};\r\n         });\r\n    }\r\n\r\n    updateSelectedTip = (target) =>{\r\n         this.setState((state) => {\r\n             const {value, name} = target;\r\n\r\n            if(name === \"customTip\"){\r\n                return {selectedTip: state.customTip};\r\n            }else{\r\n                return {selectedTip: value, customTip: ''};\r\n            }\r\n         });\r\n    }\r\n\r\n    handleBill = (e) =>{\r\n        if(parseFloat(e.target.value) > 11000 || parseFloat(e.target.value) === 0){\r\n            \r\n            if(this.state.bill){\r\n                e.target.value = this.state.bill;\r\n            }else{\r\n                 e.target.value = '';\r\n            }\r\n        }\r\n\r\n        if(!Number.isInteger(Number(e.target.value))){\r\n\r\n            e.target.value = parseFloat(parseFloat(e.target.value).toFixed(2));\r\n        }\r\n\r\n        this.handleInputChange(e.target);\r\n        this.updateReceipt();\r\n    }\r\n\r\n    handleNumberOfPpl = (e) =>{\r\n        if(parseInt(e.target.value) > 20 || parseInt(e.target.value) === 0){\r\n\r\n            if(this.state.numberOfPpl){\r\n                e.target.value = this.state.numberOfPpl;  \r\n\r\n            }else{\r\n                 e.target.value = 1;\r\n            }\r\n        }\r\n\r\n        if(!Number.isInteger(Number(e.target.value))){\r\n\r\n            e.target.value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.handleInputChange(e.target);\r\n        this.updateReceipt();\r\n    }\r\n\r\n    handleCustomTip = (e) => {\r\n        if(parseFloat(e.target.value) > 101 || parseFloat(e.target.value) === 0){\r\n            e.target.value = '';\r\n        }\r\n\r\n        if(!Number.isInteger(Number(e.target.value))){\r\n\r\n            if(parseInt(e.target.value) === 100){\r\n                 e.target.value = 100;\r\n\r\n            }else{\r\n                 e.target.value = parseFloat(parseFloat(e.target.value).toFixed(2));\r\n            }\r\n           \r\n        }\r\n\r\n        this.handleInputChange(e.target);\r\n        this.changeTipSelection(e.target);\r\n        this.updateSelectedTip(e.target);\r\n        this.updateReceipt();\r\n    }\r\n\r\n    handleTipSelection = (e) => {\r\n         this.changeTipSelection(e.target);\r\n         this.updateSelectedTip(e.target);\r\n         this.updateReceipt();\r\n    }\r\n\r\n    handleReset = (e) => {\r\n        this.setState(this.baseState);\r\n        this.changeTipSelection(e.target);\r\n    }\r\n\r\n    render(){\r\n        const tips  = [...this.state.tips];\r\n        return(\r\n            <div className='tip-calc-container'>\r\n                <Section>\r\n                    <FormInput \r\n                        label=\"Bill\"\r\n                        name=\"bill\" \r\n                        value={this.state.bill} \r\n                        type=\"number\"\r\n                        placeholder=\"0.00\"\r\n                        imageURL={dollar}\r\n                        handleChange = {this.handleBill} \r\n                        alt=\"dollar icon\"\r\n                    />\r\n\r\n                    <SeletedTip \r\n                        label=\"Select Tip %\" \r\n                        tips={tips} \r\n                        handleTipSelection={this.handleTipSelection} \r\n                        handleCustomTip={this.handleCustomTip}\r\n                        customTip ={this.state.customTip}\r\n                    />\r\n\r\n                    <FormInput \r\n                        label=\"Number of People\" \r\n                        name=\"numberOfPpl\"\r\n                        value={this.state.numberOfPpl} \r\n                        type=\"number\" \r\n                        placeholder=\"0\"\r\n                        imageURL={person} \r\n                        handleChange = {this.handleNumberOfPpl}\r\n                        alt=\"person icon\"\r\n                    />\r\n                </Section>\r\n                <Section addClass=\"result\">\r\n                    <Receipt \r\n                        title=\"Tip\"\r\n                        subText=\"Total\" \r\n                        amount={this.state.tipAmount}\r\n                    />\r\n                    <Receipt \r\n                        title=\"Total\"\r\n                        subText=\"/ person\" \r\n                        amount={this.state.total}\r\n                    />\r\n                    <CustomButton  \r\n                        onClick={this.handleReset}\r\n                        addClass = \"reset-button\" \r\n                    >\r\n                    RESET\r\n                    </CustomButton>\r\n                </Section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TipCalculator;","import React from 'react';\nimport TipCalculator from './components/tip_calculator/tip-calculator_component';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <h2 className=\"title\">SPLI<br/>TTER</h2>\n     <TipCalculator/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}